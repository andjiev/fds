version: "3.4"

services:

  postgres:
    image: postgres
    restart: always
    environment: 
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    ports: 
      - "5432:5432"
    volumes: 
      - ./db/db-init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  client:
    container_name: ui
    build: ./client
    depends_on:
      - api
      - worker
    ports:
      - "3000:3000"

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3-management
    environment:
      "RABBITMQ_DEFAULT_PASS": "rabbitmqpass123"
    ports:
      - "4369:4369"
      - "5671-5672:5671-5672"
      - "15672:15672"
      - "25672:25672"

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./server/src/FDS.Api/Dockerfile
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "ASPNETCORE_URLS=http://+:6401"
      - "ConnectionStrings__DefaultConnection=User ID=root;Password=root;Host=postgres;Port=5432;Database=fds;Pooling=true;"
      - "RabbitMQ__Address=rabbitmq"
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - 6401:6401

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: ./server/src/Services/FDS.Update.Service/Dockerfile
    volumes:
      - ./client/package.json:/appdata/package.json # change this for your needs 
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "ASPNETCORE_URLS=http://+:6501"
      - "ConnectionStrings__DefaultConnection=User ID=root;Password=root;Host=postgres;Port=5432;Database=fds;Pooling=true;"
      - "RabbitMQ__Address=rabbitmq"
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - 6501:6501
